@model IEnumerable<GongChaWebApplication.Models.TransferOrderDetail>
<div class="table-responsive">
    <table class="table table-striped">
        @{var dummyItem = Model.FirstOrDefault();}
        <tr>
            <th></th>
            <th>Item @Html.DisplayNameFor(model => new GongChaWebApplication.Models.ItemViewModel(model.Item).Label)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ParentOrder.IssueDate)
            </th>
            <th>
                @Html.DisplayName("Source Location")
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().QuantityChange)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().SrcStockBefore.ExpirationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ParentOrder.Issuer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Status)
            </th>
        </tr>
        @if (Model.Count() > 0)
        {
            foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.ActionLink("Accept", "Accept", "TransferOrder", new { TransferOrderDetailId = item.Id }, new { @class = "btn btn-default" })
                    @Html.ActionLink("Reject", "Reject", "TransferOrder", new { TransferOrderDetailId = item.Id }, new { @class = "btn btn-default" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => new GongChaWebApplication.Models.ItemViewModel(item.Item).Label)
                    @*@Html.DisplayFor(modelItem => item.Item.Serial)*@
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ParentOrder.IssueDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ParentOrder.SourceLocation.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.QuantityChange)
                    &nbsp;
                    @Html.DisplayFor(modelItem => item.Item.PackageUnit.Symbol)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SrcStockBefore.ExpirationDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ParentOrder.Issuer.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
            </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="8" class="text-center">No Pending Transfer Order for this Location.
                </td>
            </tr>
        }
    </table>
</div>
